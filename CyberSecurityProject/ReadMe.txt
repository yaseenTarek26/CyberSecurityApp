# Secure Message GUI

واجهة رسومية داكنة لتشفير وفك تشفير الرسائل باستخدام SHA-1، AES-CTR مخصص، وRSA مخصص.

## 💡 الميزات

- **SHA-1**: تجزئة الرسالة بدون إمكانية فك التشفير.
- **AES-CTR**: تشفير وفك تشفير باستخدام AES-128 في وضع Counter مع مفتاح جلسة عشوائي وNonce 64-bit.
- **RSA**: تشفير وفك تشفير باستخدام مفاتيح مخصصة (4096-bit تقريباً) يتم إنشاؤها عند بدء البرنامج.
- **GUI داكنة**: واجهة مستخدم مبنية على مكتبة Tkinter، مع قائمة منسدلة لاختيار الخوارزمية، وحقل نص لإدخال الرسالة، وحقل للنتيجة، وزرى: "تشفير" و"فك التشفير" (مع تعطيل زر "فك التشفير" عند اختيار SHA-1).
- **تعليقات بالعربية المصرية** داخل الشيفرة لتوضيح كل جزء.

---

## 🛠️ المتطلبات

- نظام **Windows 10/11** مع **Python 3.8+** مثبت مسبقاً.
- مكتبة **Tkinter** مضمّنة في توزيعات Windows عادةً.

> إذا واجهت مشكلة في توفر Tkinter، شغّل:
> ```bash
> pip install tk
> ```

- لا توجد حزم خارجية إضافية؛ كل المكونات تعتمد على مكتبة Python القياسية.

## 📦 الهيكل العام للمشروع

```
project_root/
├─ crypto_gui.py      # الشيفرة الرئيسية للواجهة والوظائف
└─ README.md          # هذا الملف
```


---

## 🚀 طريقة التشغيل

1. افتح الطرفية (Terminal) في مجلد المشروع.
2. شغل الأمر:
   ```bash
   python3 crypto_gui.py
   ```
3. ستظهر لك نافذة البرنامج:
   - اختر الخوارزمية من القائمة المنسدلة.
   - أدخل رسالتك في الحقل العلوي.
   - اضغط "تشفير" لتحصل على النتيجة في الحقل السفلي.
   - إذا كانت الخوارزمية تدعم فك التشفير (AES-CTR أو RSA)، اضغط "فك التشفير".


---

## 📝 ملاحظات

- مفاتيح AES وRSA مولّدة بشكل عشوائي في كل جلسة تشغيل، ولا تحفظ على القرص.
- النتيجة مشفرة مُرمّزة بـ Base64 لتكون قابلة للعرض والنقل.


---

## 📜 الرخصة

هذا المشروع مفتوح المصدر ويمكنك استخدامه أو تعديله حسب الحاجة.

